 				   ====Terminal Docs====
note: n∆°i l√†m vi·ªác l√† v·ªã tr√≠ directory ƒëang ƒë·ª©ng.
0. "Tab*2" :ƒê·ªÉ show th∆∞ m·ª•c con.
   "Tab" :Ho√†n th√†nh nhanh t·ª´.

1. "echo" :In.

2. "cd" :Di chuy·ªÉn n∆°i l√†m vi·ªác.
	Ex: cd - (Di chuy·ªÉn t·ªõi n∆°i khi b·∫Øt ƒë·∫ßu di qua nhi·ªÅu th∆∞ m·ª•c).
	Ex: cd /(V·ªÅ ban ƒë·∫ßu).
	Ex: cd ..(Chuy·ªÉn v·ªÅ th∆∞ m·ª•c cha).
	Ex: cd hay cd ~ (V·ªÅ th∆∞ m·ª•c home, n·∫øu c√≥ tk user th√¨ l√† t√™n user).
s
3. "pwd"" :info n∆°i l√†m vi·ªác hi·ªán t·∫°i.

4. "ls" :Th√¥ng tin c√°c folder ho·∫∑c files trong n∆°i l√†m vi·ªác
	Ex: ls -a || ls -l || ls -la (Hi·ªÉn th·ªã files ·∫©n || chi ti·∫øt h∆°n v·ªÅ file || hi·ªán c·∫£ -l v√† -a).
	Ex: ls -R (Hi·ªán th·ªã t·∫•t c·∫£ file b√™n trong, t·∫°i n∆°i l√†m vi·ªác).
	Ex: ls -(R,a,l,la) Folder(*) (Th√¥ng tin c√°c folder ho·∫∑c files trong *).
	    ls -R -la Folder (C√≥ th·ªÉ).

5. "touch" :Tao file.

6. "mv" :Di chuy·ªÉn file.
	Ex: mv test.txt ./testFolder/ (Chuy·ªÉn file v√†o testFolder).
	üí°: mv testCopy.txt test.txt (S·∫Ω ƒë·ªïi t√™n ƒëu·ª£c file).

7. "cp" :Copy file (1) sang file (2) v√† n·∫øu file (2) ch∆∞a ƒë∆∞·ª£c t·∫°o th√¨ s·∫Ω t·∫°o m·ªôt file(2) m·ªõi .
	Ex: cp test.txt(1) testCopy.txt(2).
   "cp -r" :copy directory.

8. "cat" :In t·∫•t c·∫£ th√¥ng tin trong file.
   "cat test_h.txt > test_new.txt" :Ghi n·ªôi dung trong file test_h.txt v√†o test_new.txt, ph∆∞∆°ng th·ª©c ghi l√† ghi ƒë√® (S·ª≠ d·ª•ng ƒë∆∞·ª£c cho t·∫•t c·∫£ c√°c l·ªánh c√≥ ƒë·∫ßu ra, vd: echo,.. ,C√∫ ph√°p: ... > ....).
   "cat test_h.txt >> test_new.txt" :Ghi n·ªôi dung file test_h.txt v√†o cu·ªëi file test_new.txt.
   "cat file.txt | grep 't·ª´ c·∫ßn t√¨m'" : in ra t·∫•t c·∫£ d√≤ng c√≥ t·ª´ c·∫ßn t√¨m.
   "cat -n" :opstion.
   "cat -n 'fileName' | sed -n 'lineA,lineBp'" :In t·ª´ lineA -> lineB.
      vd:cat -n file.txt | sed -n '1,10p' .
   "sed -n 'lineA,lineBp' file name" :Nh∆∞ cat , in t·ª´ lineA -> lineB.
      vd:sed -n '1,10p' file.txt .
   "head" :In th√¥ng tin ƒë·∫ßu File.
   "tail" :In th√¥ng tin cu·ªëi file.
   "tail -n [s·ªë] file.txt" :In ra s·ªë d√≤ng nh·∫≠p trong [S·ªë] t·ª´ cu·ªëi l√™n <-> head th√¨ ng∆∞·ª£c l·∫°i.
   "tail -f file.txt" :Theo d√µi(d√πng chung v·ªõi split Panel).

9. "rm" :X√≥a file.
   "rm -r" :X√≥a ƒë∆∞·ª£c Folder c√≥ th∆∞ m·ª•c con.
   "rm -fr" :X√≥a git.

10. "mkdir" :T·∫°o Folder.
    "mkdir -pv" :T·∫°o nhi·ªÅu Folder con.

11. "rmdir" :X√≥a folder .

12. "whoami" :hi·ªÉn th·ªã username, trong tr∆∞·ªùng h·ª£p b·∫°n s·ª≠ d·ª•ng nhi·ªÅu t√†i kho·∫£n b·∫°n s·∫Ω c·∫ßn quan t√¢m ƒë·∫øn l·ªánh su.

13. QUY·ªÄN H·∫†N
r,4 - read
w,2 - write
x,1 - Execute :Th·ª±c thi
0 - no permission
d - diretory
l - link(shortcuts)
'-'(·ªû ƒë·∫ßu d√≤ng) - file(-rwxr-xr-w)
 Ex:
	"drwxr-xr-w"
   Ch√∫ th√≠ch:d - th∆∞ m·ª•c
	     rwx - ƒë·ªçc, vi·∫øt, th·ª±c thi(quy·ªÅn c·ªßa user).
	     r-x - ƒë·ªçc, '-' l√† kh√¥ng c√≥ quy·ªÅn vi·∫øt, th·ª±c thi(quy·ªÅn c·ªßa group).
	     r-w - ƒë·ªçc, vi·∫øt, '-' l√† kh√¥ng c√≥ quy·ªÅn th·ª±c thi(quy·ªÅn c·ªßa other).

--X√âT QUY·ªÄN--
	chmod u=rwx,g=rw,o=r fileName.txt("="; thay ƒë·ªïi t·∫•t c·∫£, "-" :b·ªè, "+" :th√™m).
	chmod 764 fileName.txt
--Tips--
1. ^a :v·ªÅ ƒë·∫ßu d√≤ng
   ^e :v·ªÅ cu·ªëi d√≤ng
   ^w :x√≥a 1 t·ª´
   ^u :x√≥a 1 line
   ^y :add l·∫°i t·ª´ x√≥a b·∫±ng ^w
   ^l :clear screnn
   comand + k :clear tab gi·ªØ l·∫°i n·ªôi dung t·∫°i d√≤ng c√≥ con tr·ªè.
   comand + l :clear tab.

-------------------------------------------------------------------------------------------------------
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  1. So·∫°n th·∫£o t·ªáp tin "vimrc", ph·ª• thu·ªôc v√†o h·ªá th·ªëng c·ªßa b·∫°n:
        :edit ~/.vimrc          ƒë·ªëi v·ªõi Unix
        :edit ~/_vimrc          ƒë·ªëi v·ªõi MS-Windows

  2. B√¢y gi·ªù ƒë·ªçc t·∫≠p tin "vimrc" v√≠ d·ª•:

        :read $VIMRUNTIME/vimrc_example.vim

  3. Ghi l·∫°i t·∫≠p tin:

        :write
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
          		  --GIT--
==GITHUB==
1. git remote add origin 'link repository' :Li√™n k·∫øt git v·ªõi github.
   git remote add origin new-url 'link repository' :Li√™n k·∫øt th√™m v·ªõi repository kh√°c.
   git remote rm origin :X√≥a all li√™n k·∫øt.

2. git push -u origin 'branch name' :push l·∫ßn ƒë·∫ßu.
   note: passwork l√† token,
         c√°ch truy c·∫≠p your token: Settings -> Developer settings -> Personal access tokens -> Generat new token.

3. git push :ƒê·∫©y code l√™n github.
==/Users/huuynguyen/WorkSpace/Learn_Git/1-commit==

1. "git init" :B·∫Øt ƒë·∫ßu project.

2. "git status" :Tr·∫°ng th√°i c·ªßa git.

3. "git add" :Add file new v√†o git.
   "git add ." :Add t·∫•t c·∫£.

4. "git commit" :D√πng sau add, n√¥m na l√† ƒë√≥ng g√≥i l·∫°i.
   "git commit -m 'label'" :Commit c√≥ nh√£n.

5. "git log" :Show history commit.
   "git log --reverse" :Hi·ªÉn th·ªã t∆∞∆°ng t·ª± git log, nh∆∞ng th·ª© t·ª± s·∫Øp x·∫øp commit ng∆∞·ª£c l·∫°i.
   "git log --oneline" : M·ªói commit ch·ªâ hi·ªÉn th·ªã m·ªôt d√≤ng, bao g·ªìm ID commit v√† d√≤ng ƒë·∫ßu ti√™n c·ªßa messages (c√°ch n√†y c√≥ v·∫ª d·ªÖ nh√¨n nh·∫•t).
   "git log -p" :Hi·ªÉn th·ªã chi ti·∫øt th√¥ng tin commit, bao g·ªìm c·∫£ n·ªôi dung thay ƒë·ªïi (th√™m/x√≥a d√≤ng code n√†o), tuy nhi√™n n·∫øu c√≥ nhi·ªÅu s·ª± thay ƒë·ªïi, c√°ch n√†y nh√¨n kh√° l√† d√†i v√† r∆∞·ªùm r√†.

6. "git show + opstion '35397c3349157245405b09d9a44504b0f7b33be6'" :Show chi ti·∫øt thay ƒë·ªïi c·ªßa 1 commit.

7. "git diff" :Xem s·ª± kh√°c bi·ªát c·ªßa modified v·ªõi file tr∆∞·ªõc ƒë√≥.

8. "git restore 'filename' " :Quay l·∫°i tr∆∞·ªõc khi thay ƒë·ªïi.
   "git checkout -- 'filename' " :T∆∞∆°ng t·ª±.

9. "git reset HEAD 'filename' " :Undo v·ªÅ tr∆∞·ªõc khi git add.
   "git restore --staged 'filename' " :T∆∞∆°ng t·ª±.
   "git reset -- mixed 'ID-commit' " :G·ª° commit tr∆∞·ªõc 'ID-commit' v√† Undo v·ªÅ tr∆∞·ªõc khi git add.
   "git reset --soft 'ID-commit' " :G·ª° commit tr∆∞·ªõc 'ID-commit'.
   "git reset --hard 'ID-cmmit' " :X√≥a commit tr∆∞·ªõc 'ID-commit'.

10. "git revert 'ID-commit' " :X√≥a nh·ªØng thay ƒë·ªïi t·∫°i 'ID-commit'.

11. "git branch" :list c√°c nh√°nh (* l√† nh√°nh ƒëang ·ªü).
    "git branch -D 'branch-name' " :X√≥a nh√°nh 'branch-name'.

12. "git checkout -b 'branch-name' " :T·∫°o 1 nh√°nh m·ªõi.
    "git checkout 'branch-name '" :Di chuy·ªÉn v·ªÅ nh√°nh 'branch-name'.

13. "git merge 'branch-name' " :K√©o c√°c commit t·ª´ nh√°nh 'branch-name' v·ªÅ branch ƒëang ·ªü.

14. file .gitignore ch·ª©a c√°c file mu·ªën ·∫©n b·∫±ng c√°ch ghi t√™n file v√†o file .gitignore.

